- name: installation k8s
  hosts: all
  become: yes
  tasks:
    - name: change dns
      lineinfile:
        path: /etc/resolv.conf
        line: "nameserver 185.51.200.1" 
        insertbefore: BOF

    - name: change dns
      lineinfile:
        path: /etc/resolv.conf
        line: "nameserver 178.22.122.101" 
        insertbefore: BOF

    - name: installation package
      yum:
        name: 
           - dnf-plugins-core
           - vim
           - bash-completion
           - bind-utils
           - nfs-utils
           - nfs4-acl-tools
           - python3-firewall
           - firewalld
           - iproute-tc
        state: latest 
    - name: Print environment
      shell: "echo $http_proxy"

    - name: enable cri-o repo1
      get_url:
        url: https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/CentOS_8/devel:kubic:libcontainers:stable.repo
        #url: https://google.com
        dest:  /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo
          #use_proxy: true
          #environment:
          # https_proxy: http://127.0.0.1:8080
    - name: enable cri-o repo2
      get_url:
        url: https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:1.22/CentOS_8/devel:kubic:libcontainers:stable:cri-o:1.22.repo
        dest: /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:1.22.repo 
          #use_proxy: true
          #environment:
          # https_proxy: http://127.0.0.1:8080

    - name: update repolist
      yum:
        list: "*"

    - name: install cri-o
      yum:
        name: 
          - cri-o
          - cri-tools.x86_64
        state: present

    - name: start crio-service
      systemd:
        name: crio
        state: started
        enabled: yes

    - name: Download crictl
      get_url:
        url: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.27.0/crictl-v1.27.0-linux-amd64.tar.gz
        dest: /tmp/crictl.tar.gz

    - name: Extract crictl
      unarchive:
        src: /tmp/crictl.tar.gz
        dest: /usr/local/bin
        remote_src: yes
        creates: /usr/local/bin/crictl

    - name: Set crictl permissions
      file:
        path: /usr/local/bin/crictl
        mode: '0755'

    - name: keyPaths Fix
      tags:
        - keyPathsFix
      replace:
         path: /etc/containers/policy.json
         regexp: '^.*keyPaths.*'
         replace: '                    "keyPath": "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"'

    - name: enable k8s repo
      tags:
        - enableK8sRepo
      shell: |
        echo "[kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
        enabled=1
        gpgcheck=1
        gpgkey=https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        exclude=kubelet kubeadm kubectl" | sudo tee /etc/yum.repos.d/kubernetes.repo


    - name: update repolist
      yum:
        list: "*"

    - name: disable selinux
      command: setenforce 0

    - name: disable selinux config
      replace:
         path: /etc/selinux/config
         regexp: '^SELINUX=enforcing$'
         replace: 'SELINUX=permissive'

    - name: install k8s
      yum:
        name: 
          - kubelet 
          - kubeadm
          -  kubectl
        state: present
        disable_excludes: kubernetes

    - name: start kubelet
      systemd:
        name: kubelet
        state: started
        enabled: yes

    - name: disable swap
      shell: |
          sudo swapoff -a
          sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab      
    - name: modprobe
      shell: |
               sudo modprobe overlay
               sudo modprobe br_netfilter

    - name: Make module files for startup process
      file:
         path: "/etc/modules-load.d/{{item}}.conf"
         state: "touch"
      with_items:
         - "overlay"
         - "br_netfilter"

    - name: add configs for modules
      blockinfile:
         path: "/etc/modules-load.d/{{item}}.conf"
         block: |
           {{item}}
      with_items:
         - "overlay"
         - "br_netfilter"


    - name: Set system configurations for Kubernetes networking
      file:
         path: "/etc/sysctl.d/99-kubernetes-cri.conf"
         state: "touch"

    - name: Add conf for containerd
      blockinfile:
         path: "/etc/sysctl.d/99-kubernetes-cri.conf"
         block: |
                net.bridge.bridge-nf-call-iptables = 1
                net.ipv4.ip_forward = 1
                net.bridge.bridge-nf-call-ip6tables = 1

    - name: Apply new settings
      command: sudo sysctl --system

    - name: Set hostname for all hosts
      hostname:
        name: "{{ inventory_hostname }}"
        use: systemd
